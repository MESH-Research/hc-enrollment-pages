##
## Velocity Template for DisplayUsernamePasswordPage view-state
##
## Velocity context will contain the following properties
## flowExecutionUrl - the form action location
## flowRequestContext - the Spring Web Flow RequestContext
## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
## profileRequestContext - root of context tree
## authenticationContext - context with authentication request information
## authenticationErrorContext - context with login error state
## authenticationWarningContext - context with login warning state
## ldapResponseContext - context with LDAP state (if using native LDAP)
## rpUIContext - the context with SP UI information from the metadata
## extendedAuthenticationFlows - collection of "extended" AuthenticationFlowDescriptor objects
## passwordPrincipals - contents of the shibboleth.authn.Password.PrincipalOverride bean
## encoder - HTMLEncoder class
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## custom - arbitrary object injected by deployer
##
#set ($rpContext = $profileRequestContext.getSubcontext('net.shibboleth.idp.profile.context.RelyingPartyContext'))
#set ($username = $authenticationContext.getSubcontext('net.shibboleth.idp.authn.context.UsernamePasswordContext', true).getUsername())
#set ($passwordEnabled = false)
#if (!$passwordPrincipals or $passwordPrincipals.isEmpty() or $authenticationContext.isAcceptable($passwordPrincipals))
  #set ($passwordEnabled = true)
#end
##
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>#springMessageText("idp.title", "Web Login Service")</title>
        <link rel="stylesheet" type="text/css" href="$request.getContextPath()/css/main.css">
        <script type='text/javascript' src='//use.typekit.net/bgx6tpq.js'></script>
        <script type='text/javascript'>
             try{Typekit.load();}catch(e){};
        </script>
    </head>
    <body>

    <div class="wrapper">
      <div class="container">
        <header>
          <img src="/idp/images/double_hc_55.png" alt="#springMessageText("idp.logo.alt-text", "logo")">
        </header>
	
	<div class="content">
          <div class="column one">
            #parse("login-error.vm")

            <form action="$flowExecutionUrl" method="post">

            #if ($passwordEnabled)
              <div class="form-element-wrapper">
                <label for="username">#springMessageText("idp.login.username", "Username")</label>
                <input class="form-element form-field" id="username" name="j_username" type="text"
                    value="#if($username)$encoder.encodeForHTML($username)#end">
              </div>

              <div class="form-element-wrapper">
                <label for="password">#springMessageText("idp.login.password", "Password")</label>
                <input class="form-element form-field" id="password" name="j_password" type="password" value="">
              </div>

            #end

            #if ($passwordEnabled)
              <div class="form-element-wrapper">
                <button class="form-element form-button" type="submit" name="_eventId_proceed"
                    onClick="this.childNodes[0].nodeValue='#springMessageText("idp.login.pleasewait", "Logging in, please wait...")'"
                    >#springMessageText("idp.login.login", "Login")</button>
              </div>
            #end

            #foreach ($extFlow in $extendedAuthenticationFlows)
              #if ($authenticationContext.isAcceptable($extFlow) and $extFlow.apply(profileRequestContext))
                <div class="form-element-wrapper">
                  <button class="form-element form-button" type="submit" name="_eventId_$extFlow.getId()">
                    #springMessageText("idp.login.$extFlow.getId().replace('authn/','')", $extFlow.getId().replace('authn/',''))
                  </button>
                </div>
              #end
            #end
            </form>

            
          </div>
        </div>
      </div>

     <footer>
	<div class="container container-footer">
	  <!-- <p class="footer-text">#springMessageText("idp.footer", "Insert your footer text here.")</p> -->
	  <p>Copyright Â© 2016 MLA.</p>
	</div>
     </footer> 

    </div>
    
    </body>
</html>
